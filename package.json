{
  "name": "@fabiospampinato/tram",
  "description": "Boilerplate for building reactive isomorphic applications. Built around TypeScript, React, Apollo, MongoDB.",
  "version": "1.0.1",
  "license": "MIT",
  "main": "dist/server.js",
  "scripts": {
    "help": "npm-scripts-info",
    "db:init": "mkdirp .mongodb",
    "db:reset": "rimraf .mongodb",
    "db:start:prod": "mongod --port 27017 --bind_ip 127.0.0.1 --dbpath .mongodb --fork --logpath .mongodb/mongod.log",
    "db:start": "mongod --port 27017 --bind_ip 127.0.0.1 --dbpath .mongodb",
    "forever:init": "mkdirp .forever",
    "forever:start": "NODE_ENV=production forever start forever.json",
    "build:client:vendor": "webpack --config webpack/client/vendor.ts",
    "build:client": "webpack --config webpack/client/index.ts",
    "build:server:vendor": "webpack --config webpack/server/vendor.ts",
    "build:server": "webpack --config webpack/server/index.ts",
    "build:vendor": "npm-run-all -p build:client:vendor build:server:vendor",
    "build:all:prod": "NODE_ENV=production npm run build:all",
    "build:all": "npm-run-all build:vendor build:client build:server",
    "build": "npm-run-all build:client build:server",
    "start:db:prod": "npm-run-all db:init db:start:prod",
    "start:db": "npm-run-all db:init db:start",
    "start:client:hot": "node dist/server.hot.js",
    "start:server:hot:nodemon": "nodemon dist/server.js --watch dist/server.js",
    "start:server:hot:webpack": "webpack --config webpack/server/index.ts --watch",
    "start:server:hot": "npm-run-all -p start:server:hot:webpack start:server:hot:nodemon",
    "start:server:prod": "npm-run-all forever:init forever:start",
    "start:server": "node dist/server.js",
    "start:hot": "npm-run-all -p start:client:hot start:server:hot",
    "start": "npm-run-all build start:hot",
    "clean:coverage": "rimraf coverage",
    "clean:dist": "rimraf dist",
    "clean:forever": "rimraf .forever",
    "clean:tests": "rimraf dist/tests",
    "clean": "npm-run-all -p clean:coverage clean:dist clean:forever",
    "reset": "npm-run-all -p clean db:reset",
    "test:build": "webpack --config webpack/test.ts",
    "test:build:watch": "webpack --config webpack/test.ts --watch",
    "test": "npm run clean:tests && npm run test:build && ava",
    "test:watch": "npm run clean:tests && ( npm run test:build:watch & ava --watch )",
    "coverage": "npm run clean:tests && npm run test:build && nyc --reporter=html ava",
    "report": "nyc report",
    "report:html": "open coverage/index.html",
    "lint": "tslint \"src/**/**.ts*\" --force"
  },
  "scripts-info": {
    "help": "Shows all the available scripts",
    "db:init": "Initialize the database",
    "db:reset": "Resets the database",
    "db:start:prod": "Starts the database as a deamon",
    "db:start": "Starts the database",
    "forever:init": "Initialize forever",
    "forever:start": "Starts forever",
    "build:client:vendor": "Builds the client vendor",
    "build:client": "Builds the client",
    "build:server:vendor": "Builds the server vendor",
    "build:server": "Builds the server",
    "build:vendor": "Builds both client and server vendors",
    "build:all:prod": "Builds everything for production",
    "build:all": "Builds everything",
    "build": "Builds both client and server",
    "start:db:prod": "Starts the database as a deamon",
    "start:db": "Starts the database",
    "start:client:hot": "Starts the client in Hot Module Replacement mode",
    "start:server:hot:nodemon": "Starts the server using Nodemon",
    "start:server:hot:webpack": "Starts the server in watch mode",
    "start:server:hot": "Starts the server in watch-&-restart mode",
    "start:server:prod": "Starts the server in production mode",
    "start:server": "Starts the server",
    "start:hot": "Starts both client and server in HOT mode",
    "start": "Builds and starts both client and server",
    "clean:coverage": "Removes the 'coverage' folder",
    "clean:dist": "Removes the 'dist' folder",
    "clean:forever": "Removes the '.forever' folder",
    "clean:tests": "Removes the 'dist/tests' folder",
    "clean": "Removes all the generaged folders",
    "reset": "Cleans the folders and resets the database",
    "test:build": "Builds the tests",
    "test:build:watch": "Builds the tests in watch mode",
    "test": "Builds the tests and runs them",
    "test:watch": "Builds the tests and runs them, both in watch mode",
    "coverage": "Generates coverage report",
    "report": "Shows coverage report",
    "report:html": "Shows HTML coverage report",
    "lint": "Lints TypeScript files"
  },
  "ava": {
    "files": [
      "dist/tests/**"
    ]
  },
  "dependencies": {
    "apollo-client": "^1.0.3",
    "apollo-local-query": "^0.3.0",
    "body-parser": "^1.17.0",
    "conf-merge": "^1.0.0",
    "connect-mongo": "^1.3.2",
    "cookie-parser": "^1.4.3",
    "express": "^4.15.0",
    "express-send-status": "^1.0.0",
    "express-session": "^1.15.2",
    "forever": "^0.15.3",
    "graphql": "^0.9.3",
    "graphql-server-express": "^0.7.1",
    "graphql-tag": "^2.0.0",
    "history": "^4.4.0",
    "isomorphic-fetch": "^2.2.1",
    "lodash": "^4.16.6",
    "mkdirp": "^0.5.1",
    "mongease": "^1.0.6",
    "mongease-graphql": "^1.0.4",
    "mongodb": "^2.2.24",
    "mongoose": "^4.9.4",
    "mongoose-findanyoneorcreate": "^1.0.0",
    "mongoose-findoneorcreate": "^1.0.0",
    "mongoose-timestamp": "^0.6.0",
    "mongoose-to-graphql": "^1.0.5",
    "morgan": "^1.8.1",
    "npm-run": "^4.1.1",
    "npm-run-all": "^4.0.2",
    "npm-scripts-info": "^0.3.6",
    "passport": "^0.3.2",
    "passport-local": "^1.0.0",
    "passport-local-mongoose": "^4.0.0",
    "pify": "^2.3.0",
    "react": "^15.5.4",
    "react-apollo": "^1.0.1",
    "react-apollo-graphqls": "^1.0.0",
    "react-dom": "^15.5.4",
    "react-helmet": "^5.0.3",
    "react-redux": "^5.0.4",
    "react-reformed": "^1.0.1",
    "react-render-component": "^1.0.0",
    "react-router-dom": "^4.1.1",
    "react-router-redux": "^5.0.0-alpha.6",
    "redux": "^3.6.0",
    "serve-favicon": "^2.4.2"
  },
  "devDependencies": {
    "ava": "^0.19.1",
    "ava-spec": "^1.1.0",
    "awesome-typescript-loader": "^3.0.0",
    "babel-core": "^6.24.1",
    "babel-loader": "^6.4.1",
    "babel-preset-env": "^1.4.0",
    "babel-preset-react-native": "^1.9.1",
    "chalk": "^1.1.0",
    "compression": "^1.6.0",
    "copy-webpack-plugin": "^4.0.0",
    "css-loader": "^0.28.0",
    "extract-text-webpack-plugin": "^2.0.0-rc.3",
    "file-loader": "^0.11.1",
    "glob": "^7.1.1",
    "isomorphic-style-loader": "^1.1.0",
    "json-strip-loader": "^1.0.0",
    "node-sass": "^4.5.2",
    "nodemon": "^1.11.0",
    "nyc": "^10.2.0",
    "react-hot-loader": "^3.0.0-beta.6",
    "redux-logger": "^3.0.1",
    "rimraf": "^2.5.0",
    "sass-loader": "^6.0.0",
    "source-map-loader": "^0.2.1",
    "ts-node": "^3.0.2",
    "tslint": "^5.1.0",
    "tslint-react": "^2.4.0",
    "typescript": "^2.3.0",
    "typings": "^2.1.1",
    "url-loader": "^0.5.0",
    "webpack": "^2.4.1",
    "webpack-bundle-analyzer": "^2.4.0",
    "webpack-dev-middleware": "^1.8.0",
    "webpack-dev-server": "^2.4.2",
    "webpack-hot-middleware": "^2.18.0",
    "webpack-manifest-plugin": "^1.0.0",
    "webpack-node-externals": "^1.5.4",
    "webpack-summary": "^1.1.0"
  },
  "author": {
    "name": "Fabio Spampinato",
    "email": "spampinabio@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/fabiospampinato/TRAM/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/fabiospampinato/TRAM.git"
  },
  "keywords": [
    "boilerplate",
    "typescript",
    "react",
    "apollo",
    "mongodb"
  ],
  "engines": {
    "node": "7.7.0"
  }
}
